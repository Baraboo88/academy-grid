// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BookingModal successfully rendered 1`] = `
.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 100%;
  margin: 0;
  padding-top: 22px;
  padding-right: 47px;
  padding-bottom: 23px;
  padding-left: 48px;
  font-family: inherit;
  font-size: 17px;
  line-height: 20px;
  -webkit-letter-spacing: 0.03em;
  -moz-letter-spacing: 0.03em;
  -ms-letter-spacing: 0.03em;
  letter-spacing: 0.03em;
  font-weight: 800;
  text-transform: uppercase;
  color: #FFFFFF;
  background-color: #F2890F;
  border: none;
  border-radius: 65px;
  cursor: pointer;
}

.c8:focus,
.c8:hover {
  background-color: #F39425;
}

.c8:active {
  opacity: 0.8;
}

.c0 {
  z-index: 10;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(61,51,51,0.96);
}

.c1 {
  position: absolute;
  top: 50%;
  left: 50%;
  max-height: 100%;
  width: 480px;
  padding: 32px;
  padding-bottom: 50px;
  overflow-y: auto;
  overflow-x: hidden;
  background-color: #1F1D1D;
  -webkit-transform: translateX(-50%) translateY(-50%);
  -ms-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
  border-radius: 3px;
}

.c2 {
  position: absolute;
  top: 29px;
  right: 22px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 10px;
  background: none;
  border: none;
  font: inherit;
  cursor: pointer;
}

.c2:focus svg,
.c2:hover svg {
  opacity: 0.5;
}

.c2:active svg {
  opacity: 0.3;
}

.c3 {
  margin: 0;
  margin-bottom: 39px;
  padding: 0;
  font-size: 32px;
  line-height: 120%;
  font-weight: 800;
  color: #FFFFFF;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  padding: 0;
  padding-right: 16px;
}

.c5:not(:last-of-type) {
  margin-bottom: 30px;
}

.c6 {
  margin-bottom: 15px;
  color: #E6E6E6;
}

.c7 {
  padding-top: 17px;
  padding-right: 24px;
  padding-bottom: 18px;
  padding-left: 23px;
  font-family: inherit;
  color: #FFFFFF;
  background-color: transparent;
  border: 1px solid rgba(255,255,255,0.4);
  border-radius: 3px;
}

.c7::-webkit-input-placeholder {
  color: #E5E5E5;
  opacity: 0.64;
}

.c7::-moz-placeholder {
  color: #E5E5E5;
  opacity: 0.64;
}

.c7:-ms-input-placeholder {
  color: #E5E5E5;
  opacity: 0.64;
}

.c7::placeholder {
  color: #E5E5E5;
  opacity: 0.64;
}

.c7:focus,
.c7:hover {
  opacity: 0.8;
}

.c9 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  margin-top: 55px;
  margin-bottom: 21px;
  padding-top: 15px;
  padding-right: 34px;
  padding-bottom: 16px;
  padding-left: 34px;
  font-size: 14px;
  line-height: 16px;
  -webkit-letter-spacing: 0.03em;
  -moz-letter-spacing: 0.03em;
  -ms-letter-spacing: 0.03em;
  letter-spacing: 0.03em;
  background-color: #B8B8B8;
}

.c9:focus,
.c9:hover {
  background-color: rgba(255,255,255,0.32);
}

.c10 {
  position: relative;
  margin: 0;
  padding: 0;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  padding-left: 26px;
  cursor: pointer;
}

.c12::before,
.c12::after {
  position: absolute;
  top: 3px;
  left: 2px;
  width: 16px;
  height: 16px;
  opacity: 0.4;
}

.c12::before {
  content: '';
  background-color: #F2890F;
  border-radius: 4px;
}

.c12:hover {
  opacity: 0.8;
}

.c12:active {
  opacity: 0.6;
}

.c11 {
  top: 20px;
  left: 10px;
}

.c11:checked ~ .checkbox-label::after {
  content: '';
  background-image: url(icon-tick.svg);
  background-repeat: no-repeat;
  background-position: center;
}

.c11:focus ~ .checkbox-label {
  outline: 2px solid #4d90fe;
  outline-offset: 3px;
  opacity: 0.8;
}

.c11:active ~ .checkbox-label {
  opacity: 0.6;
}

.c13 {
  font-size: 14px;
  line-height: 144%;
  color: #E6E6E6;
}

.c14 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<div
  className="c0"
>
  <section
    className="c1"
  >
    <button
      className="c2"
      data-test="test-model-close"
      onClick={
        [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
    >
      <svg
        height="16"
        width="16"
      >
        icon-close.svg
      </svg>
      <span
        className="visually-hidden"
      >
        Закрыть окно
      </span>
    </button>
    <h2
      className="c3"
    >
      Оставить заявку
    </h2>
    <form
      action="https://echo.htmlacademy.ru"
      className="c4"
      data-test="test-addOrder"
      id="booking-form"
      method="post"
      onSubmit={[Function]}
    >
      <p
        className="c5"
      >
        <label
          className="c6"
          htmlFor="booking-name"
        >
          Ваше Имя
        </label>
        <input
          className="c7"
          id="booking-name"
          name="booking-name"
          onChange={[Function]}
          placeholder="Имя"
          required={true}
          type="text"
          value=""
        />
      </p>
      <p
        className="c5"
      >
        <label
          className="c6"
          htmlFor="booking-phone"
        >
          Контактный телефон
        </label>
        <input
          className="c7"
          id="booking-phone"
          name="booking-phone"
          onChange={[Function]}
          placeholder="Телефон"
          required={true}
          type="tel"
          value=""
        />
      </p>
      <p
        className="c5"
      >
        <label
          className="c6"
          htmlFor="booking-people"
        >
          Количество участников
        </label>
        <input
          className="c7"
          id="booking-people"
          name="booking-people"
          onChange={[Function]}
          placeholder="Количество участников"
          required={true}
          type="number"
          value=""
        />
      </p>
      <button
        className="c8 c9"
        type="submit"
      >
        Отправить заявку
      </button>
      <div
        className="c10"
      >
        <input
          checked={false}
          className="c11 visually-hidden"
          id="booking-legal"
          name="booking-legal"
          onChange={[Function]}
          required={true}
          type="checkbox"
        />
        <label
          className="c12 checkbox-label"
          htmlFor="booking-legal"
        >
          <span
            className="c13"
          >
            Я согласен с
             
            <a
              className="c14"
              href="#"
            >
              правилами обработки персональных данных и пользовательским соглашением
            </a>
          </span>
        </label>
      </div>
    </form>
  </section>
</div>
`;
